\i sql/basic_setup.sql
SET synchronous_commit = on;
-- Schema setup
CREATE TABLE demo (
	seq serial primary key,
	tx text,
	ts timestamp,
	jsb jsonb,
	js json,
	ba bytea
);
SELECT 'init' FROM pg_create_logical_replication_slot('regression_slot', 'pglogical_output');
 ?column? 
----------
 init
(1 row)

-- Queue up some work to decode with a variety of types
INSERT INTO demo(tx) VALUES ('textval');
INSERT INTO demo(ba) VALUES (BYTEA '\xDEADBEEF0001');
INSERT INTO demo(ts, tx) VALUES (TIMESTAMP '2045-09-12 12:34:56.00', 'blah');
INSERT INTO demo(js, jsb) VALUES ('{"key":"value"}', '{"key":"value"}');
-- Rolled back txn
BEGIN;
DELETE FROM demo;
INSERT INTO demo(tx) VALUES ('blahblah');
ROLLBACK;
-- Multi-statement transaction with subxacts
BEGIN;
SAVEPOINT sp1;
INSERT INTO demo(tx) VALUES ('row1');
RELEASE SAVEPOINT sp1;
SAVEPOINT sp2;
UPDATE demo SET tx = 'update-rollback' WHERE tx = 'row1';
ROLLBACK TO SAVEPOINT sp2;
SAVEPOINT sp3;
INSERT INTO demo(tx) VALUES ('row2');
INSERT INTO demo(tx) VALUES ('row3');
RELEASE SAVEPOINT sp3;
SAVEPOINT sp4;
DELETE FROM demo WHERE tx = 'row2';
RELEASE SAVEPOINT sp4;
SAVEPOINT sp5;
UPDATE demo SET tx = 'updated' WHERE tx = 'row1';
COMMIT;
-- txn with catalog changes
BEGIN;
CREATE TABLE cat_test(id integer);
INSERT INTO cat_test(id) VALUES (42);
COMMIT;
-- Aborted subxact with catalog changes
BEGIN;
INSERT INTO demo(tx) VALUES ('1');
SAVEPOINT sp1;
ALTER TABLE demo DROP COLUMN tx;
ROLLBACK TO SAVEPOINT sp1;
INSERT INTO demo(tx) VALUES ('2');
COMMIT;
-- Simple decode with text-format tuples
--
-- It's still the logical decoding binary protocol and as such it has
-- embedded timestamps, and pglogical its self has embedded LSNs, xids,
-- etc. So all we can really do is say "yup, we got the expected number
-- of messages".
SELECT count(data) FROM pg_logical_slot_peek_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1');
 count 
-------
    39
(1 row)

-- ... and send/recv binary format
-- The main difference visible is that the bytea fields aren't encoded
SELECT count(data) FROM pg_logical_slot_peek_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1',
	'binary.want_binary_basetypes', '1',
	'binary.basetypes_major_version', (current_setting('server_version_num')::integer / 100)::text);
 count 
-------
    39
(1 row)

-- Now enable the relation metadata cache and verify that we get the expected
-- reduction in number of messages. Not much else we can look for.
SELECT count(data) FROM pg_logical_slot_peek_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1',
	'relmeta_cache_size', '-1');
 count 
-------
    29
(1 row)

\i sql/basic_teardown.sql
SELECT 'drop' FROM pg_drop_replication_slot('regression_slot');
 ?column? 
----------
 drop
(1 row)

DROP TABLE demo;
DROP TABLE cat_test;
