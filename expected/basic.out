-- basic builtin datatypes
\c regression
SELECT pglogical.replicate_ddl_command($$
	CREATE TABLE public.basic_dml (
		id serial primary key,
		other integer,
		data text,
		something interval
	);
$$);
 replicate_ddl_command 
-----------------------
 
(1 row)

SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
ALTER TABLE public.basic_dml ADD COLUMN subonly integer;
\c regression
-- check basic insert replication
INSERT INTO basic_dml(other, data, something)
VALUES (5, 'foo', '1 minute'::interval),
       (4, 'bar', '12 weeks'::interval),
       (3, 'baz', '2 years 1 hour'::interval),
       (2, 'qux', '8 months 2 days'::interval),
       (1, NULL, NULL);
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
 id | other | data |    something     
----+-------+------+------------------
  1 |     5 | foo  | @ 1 min
  2 |     4 | bar  | @ 84 days
  3 |     3 | baz  | @ 2 years 1 hour
  4 |     2 | qux  | @ 8 mons 2 days
  5 |     1 |      | 
(5 rows)

-- update one row
\c regression
UPDATE basic_dml SET other = '4', data = NULL, something = '3 days'::interval WHERE id = 4;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
 id | other | data |    something     
----+-------+------+------------------
  1 |     5 | foo  | @ 1 min
  2 |     4 | bar  | @ 84 days
  3 |     3 | baz  | @ 2 years 1 hour
  4 |     4 |      | @ 3 days
  5 |     1 |      | 
(5 rows)

-- update multiple rows
\c regression
UPDATE basic_dml SET other = id, data = data || id::text;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
 id | other | data |    something     
----+-------+------+------------------
  1 |     1 | foo1 | @ 1 min
  2 |     2 | bar2 | @ 84 days
  3 |     3 | baz3 | @ 2 years 1 hour
  4 |     4 |      | @ 3 days
  5 |     5 |      | 
(5 rows)

\c regression
UPDATE basic_dml SET other = id, something = something - '10 seconds'::interval WHERE id < 3;
UPDATE basic_dml SET other = id, something = something + '10 seconds'::interval WHERE id > 3;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
 id | other | data |     something      
----+-------+------+--------------------
  1 |     1 | foo1 | @ 50 secs
  2 |     2 | bar2 | @ 84 days -10 secs
  3 |     3 | baz3 | @ 2 years 1 hour
  4 |     4 |      | @ 3 days 10 secs
  5 |     5 |      | 
(5 rows)

-- delete one row
\c regression
DELETE FROM basic_dml WHERE id = 2;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
 id | other | data |    something     
----+-------+------+------------------
  1 |     1 | foo1 | @ 50 secs
  3 |     3 | baz3 | @ 2 years 1 hour
  4 |     4 |      | @ 3 days 10 secs
  5 |     5 |      | 
(4 rows)

-- delete multiple rows
\c regression
DELETE FROM basic_dml WHERE id < 4;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
 id | other | data |    something     
----+-------+------+------------------
  4 |     4 |      | @ 3 days 10 secs
  5 |     5 |      | 
(2 rows)

-- truncate
\c regression
TRUNCATE basic_dml;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
 id | other | data | something 
----+-------+------+-----------
(0 rows)

-- copy
\c regression
\COPY basic_dml FROM STDIN WITH CSV
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c postgres
SELECT id, other, data, something FROM basic_dml ORDER BY id;
  id  | other | data | something 
------+-------+------+-----------
 9000 |     1 | aaa  | @ 1 hour
 9001 |     2 | bbb  | @ 2 years
 9002 |     3 | ccc  | @ 3 mins
 9003 |     4 | ddd  | @ 4 days
(4 rows)

\c regression
SELECT pglogical.replicate_ddl_command($$
	DROP TABLE public.basic_dml;
$$);
 replicate_ddl_command 
-----------------------
 
(1 row)

