SET synchronous_commit = on;
-- no need to CREATE EXTENSION as we intentionally don't have any catalog presence
-- Instead, just create a slot.
SELECT 'init' FROM pg_create_logical_replication_slot('regression_slot', 'pglogical_output');
 ?column? 
----------
 init
(1 row)

-- Minimal invocation with no data
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1');
 data 
------
(0 rows)

--
-- Various invalid parameter combos:
--
-- Text mode is not supported for native protocol
SELECT data FROM pg_logical_slot_get_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1');
ERROR:  logical decoding output plugin "pglogical_output" produces binary output, but "pg_logical_slot_get_changes(name,pg_lsn,integer,text[])" expects textual data
-- error, only supports proto v1
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '2',
	'max_proto_version', '1',
	'startup_params_format', '1');
ERROR:  client sent min_proto_version=2 but we only support protocol 1 or lower
CONTEXT:  slot "regression_slot", output plugin "pglogical_output", in the startup callback
-- error, only supports proto v1
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '2',
	'max_proto_version', '2',
	'startup_params_format', '1');
ERROR:  client sent min_proto_version=2 but we only support protocol 1 or lower
CONTEXT:  slot "regression_slot", output plugin "pglogical_output", in the startup callback
-- error, unrecognised startup params format
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '2');
ERROR:  client sent startup parameters in format 2 but we only support format 1
CONTEXT:  slot "regression_slot", output plugin "pglogical_output", in the startup callback
-- Should be OK and result in proto version 1 selection, though we won't
-- see that here.
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '2',
	'startup_params_format', '1');
 data 
------
(0 rows)

-- no such encoding / encoding mismatch
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'bork',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1');
ERROR:  unrecognised encoding name bork passed to expected_encoding
CONTEXT:  slot "regression_slot", output plugin "pglogical_output", in the startup callback
-- Different spellings of encodings are OK too
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF-8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1');
 data 
------
(0 rows)

-- bogus param format
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1',
	'proto_format', 'invalid');
ERROR:  client requested protocol invalid but only "json" or "native" are supported
CONTEXT:  slot "regression_slot", output plugin "pglogical_output", in the startup callback
-- native params format explicitly
SELECT data FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1',
	'proto_format', 'native');
 data 
------
(0 rows)

-- relmeta cache with fixed size (not supported yet, so error)
SELECT count(data) FROM pg_logical_slot_get_binary_changes('regression_slot',
	NULL, NULL,
	'expected_encoding', 'UTF8',
	'min_proto_version', '1',
	'max_proto_version', '1',
	'startup_params_format', '1',
	'relmeta_cache_size', '200');
INFO:  fixed size cache not supported, forced to off
DETAIL:  only relmeta_cache_size=0 (off) or relmeta_cache_size=-1 (unlimited) supported
CONTEXT:  slot "regression_slot", output plugin "pglogical_output", in the startup callback
 count 
-------
     0
(1 row)

SELECT 'drop' FROM pg_drop_replication_slot('regression_slot');
 ?column? 
----------
 drop
(1 row)

